version: "3.8"

volumes:
  TransferApiDb:
  NotificationDb:
  AccountDb:

networks:
  proxybackend:
  mongodb:

services:
  transfer.apigateway:
    image: ${DOCKER_REGISTRY-}transferapigateway
    build:
      context: .
      dockerfile: Transfer.ApiGateway/Dockerfile
    ports:
      - 5000:5000
      - 5001:5001
    networks:
      - proxybackend

  transfer.api:
    image: ${DOCKER_REGISTRY-}transferapi
    build:
      context: .
      dockerfile: Transfer.Api/Dockerfile
    ports:
      - 5100:5100
      - 5101:5101
    networks:
      - proxybackend
    depends_on:
      - transfer.database
      - rabbitmq

  transfer.notification:
    image: ${DOCKER_REGISTRY-}transfernotification
    build:
      context: .
      dockerfile: Transfer.Notification/Dockerfile
    ports:
      - 5200:5200
      - 5201:5201
    networks:
      - proxybackend
    depends_on:
      - notification.database
      - rabbitmq

  transfer.account:
    image: ${DOCKER_REGISTRY-}transferaccount
    build:
      context: .
      dockerfile: Transfer.Account/Dockerfile
    ports:
      - 5300:5300
      - 5301:5301
    networks:
      - proxybackend
    depends_on:
      - account.database
      - rabbitmq

  transfer.database:
    image: mongo
    container_name: transfer-database
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: guest
      MONGO_INITDB_ROOT_PASSWORD: guest
    ports:
      - 27020:27017
    networks:
      - mongodb
    volumes:
      - TransferApiDb:/var/lib/mongo/data

  notification.database:
    image: mongo
    container_name: notification-database
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: guest
      MONGO_INITDB_ROOT_PASSWORD: guest
    ports:
      - 27021:27017
    networks:
      - mongodb
    volumes:
      - NotificationDb:/var/lib/mongo/data

  account.database:
    image: mongo
    container_name: account-database
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: guest
      MONGO_INITDB_ROOT_PASSWORD: guest
    ports:
      - 27022:27017
    networks:
      - mongodb
    volumes:
      - AccountDb:/var/lib/mongo/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 15s
      retries: 3
    labels:
      name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - proxybackend
  







      



