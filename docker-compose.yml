volumes:
  TransferApiDb:
  NotificationDb:
  AccountDb:

networks:
  rabbit:
  mongodb:

services:
  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: rabbitmq-container
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - rabbit
    ports:
      - 5680:5672
      - 15680:15672
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1

  transfer.api:
    build:
      context: .
      dockerfile: Transfer.Api/Dockerfile
    environment:
      - TransferAccountApi=http://transfer.account
      - DatabaseOptions__ConnectionString=mongodb://guest:guest@transfer.database:27017
    ports:
      - 8100:8080
    networks:
      - mongodb
      - rabbit
    depends_on:
      transfer.database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  transfer.notification:
    build:
      context: .
      dockerfile: Transfer.Notification/Dockerfile
    environment:
      - DatabaseOptions__ConnectionString=mongodb://guest:guest@notification.database:27017
      - Host=rabbitmq-container
    ports:
      - 8200:8080
    networks:
      - mongodb
      - rabbit
    depends_on:
      notification.database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  transfer.account:
    build:
      context: .
      dockerfile: Transfer.Account/Dockerfile
    environment:
      - DatabaseOptions__ConnectionString=mongodb://guest:guest@account.database:27017
    restart: on-failure
    ports:
      - 8300:8080
    networks:
      - mongodb
      - rabbit
    depends_on:
      account.database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
        

  transfer.database:
    image: mongo
    container_name: transfer-database
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: guest
      MONGO_INITDB_ROOT_PASSWORD: guest
    ports:
      - 27021:27017
    networks:
      - mongodb
    volumes:
      - TransferApiDb:/var/lib/mongo/data

  notification.database:
    image: mongo
    container_name: notification-database
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: guest
      MONGO_INITDB_ROOT_PASSWORD: guest
    ports:
      - 27022:27017
    networks:
      - mongodb
    volumes:
      - NotificationDb:/var/lib/mongo/data

  account.database:
    image: mongo
    container_name: account-database
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: guest
      MONGO_INITDB_ROOT_PASSWORD: guest
    ports:
      - 27023:27017
    networks:
      - mongodb
    volumes:
      - AccountDb:/var/lib/mongo/data
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
